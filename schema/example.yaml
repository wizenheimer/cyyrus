spec: v0 # Version of the schema

# Define the properties of the dataset
dataset:
  # Define the metadata of the dataset
  metadata:
    name: invoice dataset # Name of the dataset
    description: Dataset containing the invoice data # Description of the dataset
    tags: [invoice, document] # Tags of the dataset
    license: CC-BY-NC-SA # License of the dataset
    language: en # Language of the dataset

  # Define how to shuffle the dataset
  shuffle:
    seed: 42

  # Define the splits of the dataset
  splits:
    train: 0.8 # The sum of all splits should be 1, if not specified the remaining data will be used for training. Could be named train, training
    test: 0.2 # The sum of all splits should be 1, if not specified the remaining data will be used for training. Could be named test, testing, eval, evaluation
    seed: 42 # Seed for the split

  # Define the attributes of the dataset
  attributes:
    required_columns: [
        invoice,
        document_id,
        invoice_items,
        document_info,
        invoice_questions,
      ] # List of required columns. If any of these columns are missing, the dataset will not be generated
    unique_columns: [document_id] # If there are any unique columns, specify them here. Non unique columns will be removed from the dataset
    nulls: include # Whether or not to include null values in the dataset, include, exclude, special_token

# Define the types that will be used in the dataset
types:
  document_id: # This is the type_id
    type: string # This is the type of the type, could be one of string, integer, integer, boolean, object, array

  document_info:
    type: object # Incase it's object, it must have properties
    properties:
      type: string # The key of the property and the type of the property
      date: string

  invoice_items:
    type: array # Incase it's array, it must have items
    items:
      type: object # The type of the items in the array, could be one of string, integer, integer, boolean, object, array. All elements inside array must be of the same type.
      properties:
        item: string
        description: string
        price: float
        quantity: integer
        category: string
        sub_category: string

  invoice_questions:
    type: array
    items:
      type: object
      properties:
        question: string
        answer: string

  document_text:
    type: string

# Define the tasks that will be used in Dataset generation, and their properties
tasks:
  extract_invoice_data: # This is the task_id
    task_type: generation # This is the type of the task, task_type could be one of diarization, generation, transcription, categorization, embedding, captioning, object_detection, dense_region_captioning, region_proposal, caption_to_phrase_grounding, referring_expression_segmentation, region_to_segmentation, open_vocabulary_detection, region_to_category_classification, region_to_description, optical_character_recognition, chunking, audioextraction, key_frame_extraction, face_extraction, entity_recognition
    task_properties: # These are the properties of the task, would depend on the task_type but would always be key value pairs
      max_tokens: 100
      model: gpt-3.5-turbo
      prompt: Extract the invoice data from the document {invoice}

  extract_document_info:
    task_type: generation
    task_properties:
      max_tokens: 100
      model: gpt-3.5-turbo
      prompt: Extract the document information from the document

  generate_invoice_questions:
    task_type: generation
    task_properties:
      max_tokens: 100
      model: gpt-3.5-turbo
      prompt: Generate questions about the invoice items

  pdf_parsing:
    task_type: optical_character_recognition
    task_properties:
      output: markdown
      path: /path/to/first/directory

# Define the columns that will be used in the dataset
columns:
  invoice:
    column_type: document_text
    description: Invoice text
    task_id: pdf_parsing

  document_id: # column_name
    column_type: document_id # This references the type_id or could be one of string, integer, integer, boolean. doesn't allow object, array. must be defined in the types.
    description: ID of the document # Description of the column
    task_id: extract_document_info # Task_id that will be used to generate the data
    task_input: # Input to the task, optional depending on the task, but always a key value pair
      invoice: invoice # Determines the depends_on property based on this, should be one of the column names

  document_info:
    column_type: document_info
    description: Information about the document
    task_id: extract_document_info
    task_input:
      invoice: invoice # Determines the depends_on property based on this

  invoice_items:
    column_type: invoice_items
    description: Array of invoice items
    task_id: extract_invoice_data
    task_input:
      invoice: invoice # Determines the depends_on property based on this

  invoice_questions:
    column_type: invoice_questions
    description: Questions about the invoice items
    task_id: generate_invoice_questions
    task_input:
      invoice_items: invoice_items # Determines the depends_on property based on this
